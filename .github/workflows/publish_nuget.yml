# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: PublishToNuget

on:
  push:
    tags:
    - "ver[0-9]+.[0-9]+.[0-9]+"
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v3


    - name: Dump github context
      run:   echo "$GITHUB_CONTEXT"
      shell: bash
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}


    # Make sure there is a commit
    - name: Verify commit exists in origin/main
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/main



    
    - name: Set Variables
      run: |
        # Test Folder
        echo "TEST_PATH=$GITHUB_WORKSPACE/$TEST_FOLDER" >> $GITHUB_ENV
        source $GITHUB_ENV

        # Test Project Folder
        echo "TEST_PROJECT_PATH=$TEST_PATH/$TEST_PROJECT" >> $GITHUB_ENV
        
        # Test Code Coverage Report
        echo "TEST_COVERAGE_REPORT=$TEST_PATH/$TEST_PROJECT/$COVERAGE_FOLDER" >> $GITHUB_ENV

        #source $GITHUB_ENV
        echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
        echo "WIKI_MOVER_ROOT = $WIKI_MOVER_ROOT"
        source $GITHUB_ENV

        # WIKI Mover Coverage Report Src Location.  Same as Test Code Coverage Report - but different starting point as running in a docker container.
        echo "WIKI_COVERAGE_PATH=$WIKI_MOVER_ROOT/$TEST_FOLDER/$TEST_PROJECT/$COVERAGE_FOLDER/" >> $GITHUB_ENV
        
        echo "/github/workspace/src/Test_StreamProcessorLibrary/report/"

        #echo "REMOTE_SYNC_PATH=/data/syncs/$GITHUB_REPOSITORY/CodeCoverateReport" >> $GITHUB_ENV
        echo "REMOTE_SYNC_PATH=/data/syncs" >> $GITHUB_ENV

        # Version from the last commit tag: 
        echo "VERSION=${GITHUB_REF/refs\/tags\/ver/}" >> $GITHUB_ENV

    - name: Display Variables
      run: |
        echo "Github_env:            $GITHUB_ENV"
        echo "GitHome Workspace:     $GITHUB_WORKSPACE"
        echo "Test_Path:             $TEST_PATH"
        echo "Test_Project_Path:     $TEST_PROJECT_PATH"
        echo "Test_Coverage_Report:  $TEST_COVERAGE_REPORT"
        echo "Wiki Mover Root:       $WIKI_MOVER_ROOT"
        echo "WIKI Coverage Path:    $WIKI_COVERAGE_PATH"
        echo "Remote Sync Path:      $REMOTE_SYNC_PATH"
        echo "Version:               $VERSION"



    # Install .Net
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x



    # Restore Dependencies
    - name: Restore dependencies
      run: dotnet restore


    # Build Program
    - name: Build
      run: dotnet build --no-restore --configuration Release /p:Version=${VERSION}


    # Run unit tests and generate coverage data
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release /property:CollectCoverage=True /property:CoverletOutputFormat=opencover /p:Version=${VERSION}


    - name: Pack
      run: dotnet pack --configuration Release /p:Version=${VERSION} --no-build --output .


#    - name: Push
#      run: dotnet nuget push NuGet.Workflow.${VERSION}.nupkg --source https://nuget.pkg.github.com/acraven/index.json --api-key ${GITHUB_TOKEN}
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    # Start a Shell into the Ubuntu box.  Press end key to start
    - name: Setup tmate session
      if: success() || failure()
      uses: mxschmitt/action-tmate@v3